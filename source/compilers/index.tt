[% SET title = 'Raku Compilers' %]

[% PROCESS 'menu-nav' current = 'compilers' %]

<header id="subpage-header" class="lead well">
    [% INSERT 'camelia' %]

    <h2><b>Raku</b> Compilers</h2>

    <p>Raku is a language specification and, just like C or C++, it
    encourages multiple compilers for the language.</p>
</header>

<div class="row">
  <div class="col-sm-8">
    <div class="panel panel-default">
      <div class="panel-body trim">
        <h3 class="trim-top">Compilers</h3>

        <h4><a href="https://rakudo.org/">Rakudo™</a> and <a href="https://github.com/raku/nqp/">NQP</a></h4>
        <p>Rakudo runs on
        <a href="http://moarvm.org/">MoarVM</a> and the Java Virtual Machine
        (JVM).
        It is actively developed on the
        <a href="http://github.com/rakudo/rakudo">Rakudo GitHub</a> site. <a
        href="https://rakudo.org/files">Download or compile
        Rakudo</a>.</p>

        <p>NQP is <em>not</em> a Raku compiler. NQP is a small subset of Raku
        used as a foundational tool to help write compilers (including
        <a href="https://github.com/rakudo/rakudo/blob/master/src/main.nqp">Rakudo</a>)
        and libraries.
        </p>

        <hr>

        <h4>Historical Compilers</h4>
        <dl>
          <dt><a href="http://github.com/sorear/niecza">Niecza</a></dt>
          <dd>Niecza is a compiler
          targeting the Common Language Runtime (.NET and Mono).  Its goal
          is to explore the static aspects of Raku and the possibilities
          for compile-time optimization.
          </dd>

          <dt><a href="/compilers/std-viv">STD</a></dt>
          <dd>STD is Larry Wall's reference implementation of the Raku grammar,
          parser generator, and some of the semantic verifier. STD is an
          abbreviation of "Standard". It is written in
          Raku, transliterated into Perl 5 by viv.
          It is also used by
          various phases of several other compilers (mildew, perlito, elf).
          </dd>

          <dt><a href="/compilers/std-viv">viv</a></dt>
          <dd>viv ("vi" to "v", 6 to 5)
          is a compiler that uses STD as its front-end. STD itself uses viv to
          build. It is actively developed along with STD.
          </dd>

          <dt><a href="http://fglock.github.io/Perlito/">Perlito</a></dt>
          <dd>Perlito, also known as MiniPerl6,
          is a subset of Raku, designed as a light bootstrapping language.
          You can <a href="http://fglock.github.io/Perlito/perlito/perlito6.html">try it online</a>. It is
          actively developed <a href="http://github.com/fglock/Perlito/">here</a>.
          </dd>

          <dt><a href="https://en.wikipedia.org/wiki/Pugs_(programming)">Pugs</a></dt>
          <dd>Pugs is written in Haskell.
          Maintenance releases for successive versions of ghc are
          <a href="http://hackage.haskell.org/package/Pugs">published</a> to Hackage.
          </dd>
        </dl>
      </div>
    </div>
  </div>
  <div class="col-sm-4">
    <div class="panel panel-warning">
      <div class="panel-heading">
        <h3 class="panel-title">Supplementals</h3>
      </div>
      <div class="panel-body">
        <section id="supplementals" class="wide">
        <ul class="shush-list">
            <li>
            <a href="https://github.com/niner/Inline-Perl5">Inline::Perl5</a> executes
            Perl code in Raku.  Supports Perl modules including XS
            modules like <a href="https://metacpan.org/pod/DBI">DBI</a>.  Allows
            passing integers, strings, arrays and hashes. Also supports calling methods
            on Perl objects from Raku and calling methods on Raku objects from Perl.
            </li>

            <li>
            <a
            href="http://github.com/rakudo/rakudo/tree/master/src/core/">Rakudo's
            setting library</a> which defines all of the classes, routines, and terms
            available when your script starts. In Perl parlance, it's roughly all the
            things you can see in perlfunc, perlop, etc. This part of Raku is
            mostly written in Raku (and NQP).
            </li>
        </ul>
        </section>
      </div>
    </div>
  </div>
</div>
